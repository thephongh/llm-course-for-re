import SwiftUI
import Foundation

// MARK: - Models
struct Module: Identifiable, Codable {
    let id: Int
    let title: String
    let duration: TimeInterval
    let microlessons: [Microlesson]
    let status: ModuleStatus
    let progress: Double
    let icon: String
    let unlockRequirement: String?
    let description: String
    let learningObjectives: [String]
    let keyOutcome: String
}

enum ModuleStatus: String, CaseIterable, Codable {
    case completed = "completed"
    case current = "current"
    case locked = "locked"
}

struct Microlesson: Identifiable, Codable {
    let id: String
    let title: String
    let duration: TimeInterval
    let points: Int
    let status: MicrolessonStatus
}

enum MicrolessonStatus: String, CaseIterable, Codable {
    case completed = "completed"
    case current = "current"
    case locked = "locked"
}

struct UserProgress: Codable {
    var totalProgress: Double = 0.89
    var completedModules: Int = 2
    var totalModules: Int = 5
    var streakDays: Int = 12
    var totalPoints: Int = 2450
}

struct Achievement: Identifiable, Codable {
    let id: String
    let title: String
    let description: String
    let icon: String
    let isEarned: Bool
    let points: Int
}

struct LeaderboardEntry: Identifiable {
    let id: String
    let username: String
    let points: Int
    let rank: Int
    let isCurrentUser: Bool
    let positionChange: PositionChange
}

enum PositionChange {
    case winner
    case up
    case down
    case same
}

// MARK: - Complete Module Data
let sampleModules: [Module] = [
    Module(
        id: 1,
        title: "üß† AI C∆° B·∫£n & ·ª®ng D·ª•ng NƒÉng L∆∞·ª£ng",
        duration: 2520, // 42 minutes
        microlessons: [
            Microlesson(id: "1.1", title: "Gi·ªõi thi·ªáu kh√≥a h·ªçc & m·ª•c ti√™u", duration: 420, points: 50, status: .completed),
            Microlesson(id: "1.2", title: "AI, Machine Learning & Deep Learning", duration: 420, points: 50, status: .completed),
            Microlesson(id: "1.3", title: "Generative AI - Kh√°i ni·ªám c·ªët l√µi", duration: 420, points: 50, status: .completed),
            Microlesson(id: "1.4", title: "·ª®ng d·ª•ng AI trong ng√†nh nƒÉng l∆∞·ª£ng", duration: 420, points: 50, status: .completed),
            Microlesson(id: "1.5", title: "D·ª± ƒëo√°n b·∫£o tr√¨ v√† t·ªëi ∆∞u h√≥a", duration: 420, points: 50, status: .completed),
            Microlesson(id: "1.6", title: "Ki·ªÉm tra ki·∫øn th·ª©c Module 1", duration: 420, points: 100, status: .completed)
        ],
        status: .completed,
        progress: 1.0,
        icon: "üß†",
        unlockRequirement: nil,
        description: "X√¢y d·ª±ng n·ªÅn t·∫£ng hi·ªÉu bi·∫øt v·ªÅ AI, Machine Learning v√† Generative AI v·ªõi c√°c v√≠ d·ª• th·ª±c t·∫ø t·ª´ ng√†nh nƒÉng l∆∞·ª£ng. S∆° ƒë·ªì t∆∞∆°ng t√°c v√† case studies gi√∫p l√†m r√µ nh·ªØng kh√°i ni·ªám ph·ª©c t·∫°p.",
        learningObjectives: [
            "ƒê·ªãnh nghƒ©a r√µ r√†ng v√† ph√¢n bi·ªát AI, ML, v√† Generative AI",
            "·ª®ng d·ª•ng trong ng√†nh nƒÉng l∆∞·ª£ng v√† use cases",
            "V√≠ d·ª• d·ª± ƒëo√°n b·∫£o tr√¨ th·ª±c t·∫ø",
            "Ki·ªÉm tra ki·∫øn th·ª©c t∆∞∆°ng t√°c"
        ],
        keyOutcome: "T·ª± tin gi·∫£i th√≠ch c√°c kh√°i ni·ªám AI v√† x√°c ƒë·ªãnh c∆° h·ªôi trong c√¥ng vi·ªác nƒÉng l∆∞·ª£ng c·ªßa b·∫°n."
    ),
    Module(
        id: 2,
        title: "ü§ñ Hi·ªÉu V·ªÅ M√¥ H√¨nh Ng√¥n Ng·ªØ L·ªõn (LLMs)",
        duration: 2520,
        microlessons: [
            Microlesson(id: "2.1", title: "Large Language Models l√† g√¨?", duration: 420, points: 50, status: .completed),
            Microlesson(id: "2.2", title: "Tokens v√† Parameters", duration: 420, points: 50, status: .completed),
            Microlesson(id: "2.3", title: "Ki·∫øn tr√∫c Transformer", duration: 420, points: 50, status: .completed),
            Microlesson(id: "2.4", title: "·ª®ng d·ª•ng LLM trong t√†i li·ªáu nƒÉng l∆∞·ª£ng", duration: 420, points: 50, status: .current),
            Microlesson(id: "2.5", title: "H·∫°n ch·∫ø v√† th√°ch th·ª©c", duration: 420, points: 50, status: .completed),
            Microlesson(id: "2.6", title: "Ki·ªÉm tra ki·∫øn th·ª©c Module 2", duration: 420, points: 100, status: .completed)
        ],
        status: .current,
        progress: 0.83,
        icon: "ü§ñ",
        unlockRequirement: nil,
        description: "Kh√°m ph√° s√¢u c√°ch LLMs ho·∫°t ƒë·ªông v·ªõi gi·∫£i th√≠ch tr·ª±c quan v·ªÅ tokens, parameters v√† transformers. Xem ch√≠nh x√°c c√°ch c√°c m√¥ h√¨nh n√†y x·ª≠ l√Ω v√† t·∫°o vƒÉn b·∫£n.",
        learningObjectives: [
            "Ki·∫øn tr√∫c v√† th√†nh ph·∫ßn c·ªßa LLM",
            "C∆° ch·∫ø x·ª≠ l√Ω token",
            "Kh·∫£ nƒÉng v√† h·∫°n ch·∫ø c·ªßa m√¥ h√¨nh",
            "·ª®ng d·ª•ng t√†i li·ªáu nƒÉng l∆∞·ª£ng"
        ],
        keyOutcome: "Hi·ªÉu c√°ch LLMs ho·∫°t ƒë·ªông v√† h·∫°n ch·∫ø c·ªßa ch√∫ng trong s·ª≠ d·ª•ng chuy√™n nghi·ªáp."
    ),
    Module(
        id: 3,
        title: "üí¨ AI Chatbots Trong C√¥ng Vi·ªác NƒÉng L∆∞·ª£ng",
        duration: 2520,
        microlessons: [
            Microlesson(id: "3.1", title: "T·ªïng quan c√°c n·ªÅn t·∫£ng Chatbot", duration: 420, points: 50, status: .completed),
            Microlesson(id: "3.2", title: "ChatGPT, Gemini, Claude, Perplexity AI", duration: 420, points: 50, status: .completed),
            Microlesson(id: "3.3", title: "T√≠ch h·ª£p v√†o quy tr√¨nh l√†m vi·ªác", duration: 420, points: 50, status: .completed),
            Microlesson(id: "3.4", title: "L·∫≠p k·∫ø ho·∫°ch d·ª± √°n v·ªõi AI", duration: 420, points: 50, status: .current),
            Microlesson(id: "3.5", title: "Giao ti·∫øp v·ªõi stakeholder", duration: 420, points: 50, status: .completed),
            Microlesson(id: "3.6", title: "Ki·ªÉm tra ki·∫øn th·ª©c Module 3", duration: 420, points: 100, status: .completed)
        ],
        status: .current,
        progress: 0.83,
        icon: "üí¨",
        unlockRequirement: nil,
        description: "Kh√°m ph√° ·ª©ng d·ª•ng chatbot th·ª±c t·∫ø v·ªõi demos t∆∞∆°ng t√°c. H·ªçc c√°ch t√≠ch h·ª£p AI assistants v√†o l·∫≠p k·∫ø ho·∫°ch d·ª± √°n, ph√¢n t√≠ch v√† giao ti·∫øp stakeholder.",
        learningObjectives: [
            "Kh·∫£ nƒÉng n·ªÅn t·∫£ng chatbot (ChatGPT, Gemini, Claude, Perplexity AI)",
            "Chi·∫øn l∆∞·ª£c t√≠ch h·ª£p workflow nƒÉng l∆∞·ª£ng",
            "Scenarios th·ª±c h√†nh hands-on",
            "Use cases chuy√™n nghi·ªáp"
        ],
        keyOutcome: "S·ª≠ d·ª•ng hi·ªáu qu·∫£ AI chatbots ƒë·ªÉ n√¢ng cao c√¥ng vi·ªác h√†ng ng√†y trong ng√†nh nƒÉng l∆∞·ª£ng."
    ),
    Module(
        id: 4,
        title: "‚úçÔ∏è L√†m Ch·ªß K·ªπ Thu·∫≠t Prompt Engineering",
        duration: 2520,
        microlessons: [
            Microlesson(id: "4.1", title: "Nguy√™n t·∫Øc c∆° b·∫£n c·ªßa Prompt", duration: 420, points: 50, status: .completed),
            Microlesson(id: "4.2", title: "Templates cho ng√†nh nƒÉng l∆∞·ª£ng", duration: 420, points: 50, status: .completed),
            Microlesson(id: "4.3", title: "K·ªπ thu·∫≠t Prompting n√¢ng cao", duration: 420, points: 50, status: .completed),
            Microlesson(id: "4.4", title: "Prompt Builder t∆∞∆°ng t√°c", duration: 420, points: 50, status: .completed),
            Microlesson(id: "4.5", title: "Th·ª±c h√†nh v·ªõi v√≠ d·ª• th·ª±c t·∫ø", duration: 420, points: 50, status: .current),
            Microlesson(id: "4.6", title: "Ki·ªÉm tra ki·∫øn th·ª©c Module 4", duration: 420, points: 100, status: .completed)
        ],
        status: .current,
        progress: 0.83,
        icon: "‚úçÔ∏è",
        unlockRequirement: nil,
        description: "H·ªçc ngh·ªá thu·∫≠t t·∫°o prompts hi·ªáu qu·∫£ th√¥ng qua b√†i t·∫≠p t∆∞∆°ng t√°c. Th·ª±c h√†nh v·ªõi templates chuy√™n bi·ªát cho nƒÉng l∆∞·ª£ng v√† xem k·∫øt qu·∫£ ngay l·∫≠p t·ª©c.",
        learningObjectives: [
            "Nguy√™n t·∫Øc framework prompt",
            "Templates chuy√™n bi·ªát cho nƒÉng l∆∞·ª£ng",
            "K·ªπ thu·∫≠t prompting n√¢ng cao",
            "Prompt builder t∆∞∆°ng t√°c"
        ],
        keyOutcome: "T·∫°o c√°c prompts m·∫°nh m·∫Ω ƒë·ªÉ c√≥ k·∫øt qu·∫£ t·ªëi ∆∞u cho ·ª©ng d·ª•ng nƒÉng l∆∞·ª£ng."
    ),
    Module(
        id: 5,
        title: "üõ°Ô∏è ƒê·∫°o ƒê·ª©c & Th·ª±c H√†nh An To√†n",
        duration: 2520,
        microlessons: [
            Microlesson(id: "5.1", title: "ƒê·∫°o ƒë·ª©c AI trong c∆° s·ªü h·∫° t·∫ßng nƒÉng l∆∞·ª£ng", duration: 420, points: 50, status: .completed),
            Microlesson(id: "5.2", title: "B·∫£o m·∫≠t d·ªØ li·ªáu v√† quy·ªÅn ri√™ng t∆∞", duration: 420, points: 50, status: .completed),
            Microlesson(id: "5.3", title: "K·ªπ thu·∫≠t x√°c minh th√¥ng tin", duration: 420, points: 50, status: .completed),
            Microlesson(id: "5.4", title: "Framework tri·ªÉn khai c√≥ tr√°ch nhi·ªám", duration: 420, points: 50, status: .completed),
            Microlesson(id: "5.5", title: "Case studies an to√†n", duration: 420, points: 50, status: .completed),
            Microlesson(id: "5.6", title: "Ki·ªÉm tra ki·∫øn th·ª©c Module 5", duration: 420, points: 100, status: .completed)
        ],
        status: .completed,
        progress: 1.0,
        icon: "üõ°Ô∏è",
        unlockRequirement: nil,
        description: "Th√†nh th·∫°o vi·ªác s·ª≠ d·ª•ng AI c√≥ tr√°ch nhi·ªám v·ªõi scenarios t∆∞∆°ng t√°c chuy√™n bi·ªát cho c∆° s·ªü h·∫° t·∫ßng nƒÉng l∆∞·ª£ng. H·ªçc c√°c k·ªπ thu·∫≠t b·∫£o m·∫≠t v√† x√°c minh quan tr·ªçng.",
        learningObjectives: [
            "Scenarios ƒë·∫°o ƒë·ª©c nƒÉng l∆∞·ª£ng",
            "Guidelines b·∫£o m·∫≠t v√† b·∫£o v·ªá d·ªØ li·ªáu",
            "K·ªπ thu·∫≠t x√°c minh",
            "Frameworks tri·ªÉn khai AI c√≥ tr√°ch nhi·ªám"
        ],
        keyOutcome: "Tri·ªÉn khai gi·∫£i ph√°p AI an to√†n v√† c√≥ tr√°ch nhi·ªám trong c∆° s·ªü h·∫° t·∫ßng nƒÉng l∆∞·ª£ng."
    )
]

let sampleAchievements: [Achievement] = [
    Achievement(id: "first_lesson", title: "B√†i ƒë·∫ßu ti√™n", description: "Ho√†n th√†nh b√†i h·ªçc ƒë·∫ßu ti√™n", icon: "üéØ", isEarned: true, points: 50),
    Achievement(id: "week_streak", title: "Tu·∫ßn li√™n ti·∫øp", description: "H·ªçc 7 ng√†y li√™n ti·∫øp", icon: "üî•", isEarned: true, points: 100),
    Achievement(id: "module_complete", title: "Ho√†n th√†nh m√¥-ƒëun", description: "Ho√†n th√†nh m√¥-ƒëun ƒë·∫ßu ti√™n", icon: "üèÜ", isEarned: true, points: 200),
    Achievement(id: "ai_expert", title: "Chuy√™n gia AI", description: "ƒê·∫°t 90% tr·ªü l√™n t·∫•t c·∫£ b√†i ki·ªÉm tra", icon: "üß†", isEarned: true, points: 500),
    Achievement(id: "practice_master", title: "Th·∫°c sƒ© th·ª±c h√†nh", description: "Ho√†n th√†nh 50 b√†i t·∫≠p th·ª±c h√†nh", icon: "‚ö°", isEarned: true, points: 300),
    Achievement(id: "community_helper", title: "Tr·ª£ gi√∫p c·ªông ƒë·ªìng", description: "Gi√∫p ƒë·ª° 10 ng∆∞·ªùi h·ªçc kh√°c", icon: "ü§ù", isEarned: false, points: 150)
]

let sampleLeaderboard: [LeaderboardEntry] = [
    LeaderboardEntry(id: "1", username: "Phong Han", points: 2450, rank: 1, isCurrentUser: true, positionChange: .winner),
    LeaderboardEntry(id: "2", username: "Minh Anh", points: 2180, rank: 2, isCurrentUser: false, positionChange: .up),
    LeaderboardEntry(id: "3", username: "Ho√†ng Long", points: 1950, rank: 3, isCurrentUser: false, positionChange: .down),
    LeaderboardEntry(id: "4", username: "Thu H√†", points: 1780, rank: 4, isCurrentUser: false, positionChange: .same),
    LeaderboardEntry(id: "5", username: "VƒÉn ƒê·∫°t", points: 1650, rank: 5, isCurrentUser: false, positionChange: .up)
]

// MARK: - App State
class AppState: ObservableObject {
    @Published var selectedTab: TabBarView.Tab = .home
    @Published var userProgress = UserProgress()
    @Published var modules: [Module] = []
    @Published var achievements: [Achievement] = []
    
    init() {
        loadInitialData()
    }
    
    private func loadInitialData() {
        modules = sampleModules
        achievements = sampleAchievements
    }
}